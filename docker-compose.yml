version: '3.8'

services:
  # ======================================
  # üêò PostgreSQL Database (LOCAL ONLY)
  # ======================================
  # Uncomment this service if you want to use local PostgreSQL instead of Supabase
  # Also update .env to use: Host=postgres;Port=5432;Database=LinkShortenerDb
  
  # postgres:
  #   image: postgres:16-alpine
  #   container_name: linkshortener-db
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB:-LinkShortenerDb}
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - linkshortener-network

  # ======================================
  # üî¥ Redis Cache
  # ======================================
  redis:
    image: redis:7-alpine
    container_name: linkshortener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - linkshortener-network

  # ======================================
  # üöÄ LinkShortener API
  # ======================================
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: linkshortener-api
    extra_hosts:
      - "db.scwfucxtyevazphkvklj.supabase.co:host-gateway"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      # Database - Uses external database from .env (Supabase or other)
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
      - ConnectionStrings__Redis=redis:6379
      
      # JWT
      - Jwt__Issuer=${Jwt__Issuer:-LinkShortener}
      - Jwt__Audience=${Jwt__Audience:-LinkShortenerClient}
      - Jwt__KeysFolder=/app/Keys
      
      # Email (Resend API)
      - Resend__ApiKey=${Resend__ApiKey}
      - Email__FromAddress=${Email__FromAddress:-onboarding@resend.dev}
      
      # Google OAuth
      - Google__ClientId=${Google__ClientId}
      
      # ASP.NET Core
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ASPNETCORE_URLS=http://+:8080
      - AllowedHosts=*
      
      # Logging
      - Logging__LogLevel__Default=${Logging__LogLevel__Default:-Information}
      - Logging__LogLevel__Microsoft.AspNetCore=${Logging__LogLevel__Microsoft_AspNetCore:-Warning}
      - Logging__LogLevel__Microsoft.EntityFrameworkCore=${Logging__LogLevel__Microsoft_EntityFrameworkCore:-Warning}
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      # If using local postgres, uncomment:
      # postgres:
      #   condition: service_healthy
    volumes:
      - jwt_keys:/app/Keys
    networks:
      - linkshortener-network
    restart: unless-stopped

# ======================================
# üì¶ Volumes
# ======================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  jwt_keys:
    driver: local

# ======================================
# üåê Networks
# ======================================
networks:
  linkshortener-network:
    driver: bridge
